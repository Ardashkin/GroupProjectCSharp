//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReferenceProduct {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceProduct.IShopServiceBaseOf_Product")]
    public interface IShopServiceBaseOf_Product {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopServiceBaseOf_Product/Create", ReplyAction="http://tempuri.org/IShopServiceBaseOf_Product/CreateResponse")]
        void Create(DomainModel.Product item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopServiceBaseOf_Product/Create", ReplyAction="http://tempuri.org/IShopServiceBaseOf_Product/CreateResponse")]
        System.Threading.Tasks.Task CreateAsync(DomainModel.Product item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopServiceBaseOf_Product/GetItems", ReplyAction="http://tempuri.org/IShopServiceBaseOf_Product/GetItemsResponse")]
        DomainModel.Product[] GetItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopServiceBaseOf_Product/GetItems", ReplyAction="http://tempuri.org/IShopServiceBaseOf_Product/GetItemsResponse")]
        System.Threading.Tasks.Task<DomainModel.Product[]> GetItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopServiceBaseOf_Product/Update", ReplyAction="http://tempuri.org/IShopServiceBaseOf_Product/UpdateResponse")]
        void Update(DomainModel.Product item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopServiceBaseOf_Product/Update", ReplyAction="http://tempuri.org/IShopServiceBaseOf_Product/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(DomainModel.Product item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopServiceBaseOf_Product/Delete", ReplyAction="http://tempuri.org/IShopServiceBaseOf_Product/DeleteResponse")]
        void Delete(DomainModel.Product item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopServiceBaseOf_Product/Delete", ReplyAction="http://tempuri.org/IShopServiceBaseOf_Product/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(DomainModel.Product item);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IShopServiceBaseOf_ProductChannel : Client.ServiceReferenceProduct.IShopServiceBaseOf_Product, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShopServiceBaseOf_ProductClient : System.ServiceModel.ClientBase<Client.ServiceReferenceProduct.IShopServiceBaseOf_Product>, Client.ServiceReferenceProduct.IShopServiceBaseOf_Product {
        
        public ShopServiceBaseOf_ProductClient() {
        }
        
        public ShopServiceBaseOf_ProductClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ShopServiceBaseOf_ProductClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShopServiceBaseOf_ProductClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShopServiceBaseOf_ProductClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Create(DomainModel.Product item) {
            base.Channel.Create(item);
        }
        
        public System.Threading.Tasks.Task CreateAsync(DomainModel.Product item) {
            return base.Channel.CreateAsync(item);
        }
        
        public DomainModel.Product[] GetItems() {
            return base.Channel.GetItems();
        }
        
        public System.Threading.Tasks.Task<DomainModel.Product[]> GetItemsAsync() {
            return base.Channel.GetItemsAsync();
        }
        
        public void Update(DomainModel.Product item) {
            base.Channel.Update(item);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(DomainModel.Product item) {
            return base.Channel.UpdateAsync(item);
        }
        
        public void Delete(DomainModel.Product item) {
            base.Channel.Delete(item);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(DomainModel.Product item) {
            return base.Channel.DeleteAsync(item);
        }
    }
}
